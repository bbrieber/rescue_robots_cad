<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from donkey.gazebo.urdf.xacro       | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="iai_donkey" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="chains_loose_front_left">
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel_Col.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="chains_joint_front_left" type="revolute">
    <parent link="base_link"/>
    <child link="chains_loose_front_left"/>
    <origin rpy="3.14159393311 0 0" xyz="0.696425437927 0.503306388855 -0.26314997673"/>
    <limit effort="-1" lower="1." upper="2." velocity="-1"/>
    <axis xyz="0 1 0"/>
  </joint>
  <transmission name="chain_trans_front_left">
    <type>position_controllers/JointTrajectoryController</type>
    <joint name="chains_joint_front_left">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="chain_motor_front_left">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="chains_loose_front_right">
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel_Col.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="chains_joint_front_right" type="revolute">
    <parent link="base_link"/>
    <child link="chains_loose_front_right"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.696425437927 -0.503306388855 -0.26314997673"/>
    <limit effort="-1" lower="1." upper="2." velocity="-1"/>
    <axis xyz="0 -1 0"/>
  </joint>
  <transmission name="chain_trans_front_right">
    <type>position_controllers/JointTrajectoryController</type>
    <joint name="chains_joint_front_right">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="chain_motor_front_right">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="chains_loose_back_left">
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel_Col.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="chains_joint_back_left" type="revolute">
    <parent link="base_link"/>
    <child link="chains_loose_back_left"/>
    <origin rpy="3.14159393311 3.14159393311 0.0" xyz="-0.348821163177 0.503306388855 -0.26314997673"/>
    <limit effort="-1" lower="1." upper="2." velocity="-1"/>
    <axis xyz="0 -1 0"/>
  </joint>
  <transmission name="chain_trans_back_left">
    <type>position_controllers/JointTrajectoryController</type>
    <joint name="chains_joint_back_left">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="chain_motor_back_left">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="chains_loose_back_right">
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Loose_Wheel_Col.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="chains_joint_back_right" type="revolute">
    <parent link="base_link"/>
    <child link="chains_loose_back_right"/>
    <origin rpy="0.0 3.14159393311 0.0" xyz="-0.348821163177 -0.503306388855 -0.26314997673"/>
    <limit effort="-1" lower="1." upper="2." velocity="-1"/>
    <axis xyz="0 1 0"/>
  </joint>
  <transmission name="chain_trans_back_right">
    <type>position_controllers/JointTrajectoryController</type>
    <joint name="chains_joint_back_right">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="chain_motor_back_right">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="base_link">
    <!--MAIN_BODY-->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Body_Full.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/body_full_col.stl"/>
      </geometry>
    </collision>
    <!--LEFT_CHAINS-->
    <visual>
      <origin rpy="0 0 0" xyz="0.16442573070526123 0.3477001190185547 -0.2631499767303467"/>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 0 0" xyz="0.16442573070526123 -0.3477001190185547 -0.2631499767303467"/>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
      </geometry>
    </visual>
    <!--
	
	
        <visual>
        <origin xyz="0.16442573070526123 0.3477001190185547 -0.2631499767303467" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
        </geometry>
        </visual>
        
	<visual>
        <origin xyz="0.16442573070526123 -0.3477001190185547 -0.2631499767303467" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
        </geometry>
        </visual>
        <collision>
        <origin xyz="0.16442573070526123 0.3477001190185547 -0.2631499767303467" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
        </geometry>
        </collision>
        <collision>
        <origin xyz="0.16442573070526123 -0.3477001190185547 -0.2631499767303467" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://iai_sherpa_donkey/meshes/Main_Wheel.dae"/>
        </geometry>
        </collision>
	-->
    <!--
        <collision>
        <geometry>
            <mesh filename="package://iai_sherpa_donkey/meshes/Full_Body_Col.dae"/>
        </geometry>
            <origin xyz="0.004205834120512009 -8.124277428578353e-08 0.4054466485977173" rpy="0 0 0" />
        </collision>
	-->
    <inertial>
      <!--       
        <origin xyz="0.0 0 0.15" rpy="0 0 0"/>
	  
	  <origin xyz="0.5 0 -0.25" rpy="0 0 0"/>
	-->
      <origin rpy="0 0 0" xyz="0.0 0 -0.35"/>
      <mass value="100"/>
      <inertia ixx="0.75" ixy="0.0" ixz="0.0" iyy="0.75" iyz="0.0" izz="0.75"/>
    </inertial>
  </link>
  <link name="base_footprint">
    <!-- visual -->
    <!-- collision -->
    <!-- inertial -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.03"/>
      <!-- FIXME starting higher to avoid collision-->
      <mass value="0.1"/>
      <!--
	-->
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
    </inertial>
  </link>
  <joint name="base_footprint_base_link_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.4054466485977173"/>
  </joint>
  <link name="box_dock_link">
    </link>
  <joint name="box_dock_joint" type="fixed">
    <parent link="base_link"/>
    <child link="box_dock_link"/>
    <origin rpy="0.0 0.0 3.14159393311" xyz="0.08 0.0 0.135"/>
  </joint>
  <link name="cam_left">
    <!-- visual -->
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/cam_vis.dae"/>
      </geometry>
    </visual>
    <!-- collision -->
    <!-- inertial -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
  </link>
  <joint name="base_cam_left_joint" type="revolute">
    <parent link="base_link"/>
    <child link="cam_left"/>
    <origin rpy="3.141592654 0 0" xyz="1.465 0.1 0.2"/>
    <axis xyz="1 0 0"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <link name="cam_right">
    <!-- visual -->
    <visual>
      <geometry>
        <mesh filename="package://iai_sherpa_donkey/meshes/cam_vis.dae"/>
      </geometry>
    </visual>
    <!-- collision -->
    <!-- inertial -->
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
  </link>
  <joint name="base_cam_right_joint" type="revolute">
    <parent link="base_link"/>
    <child link="cam_right"/>
    <origin rpy="0 0 0" xyz="1.465 -0.1 0.2"/>
    <axis xyz="1 0 0"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo reference="cam_left">
    <sensor name="cam_left_camera" type="camera">
      <pose>0 0 0 3.141592654 0 0 </pose>
      <update_rate>30.0</update_rate>
      <camera name="cam_left_cam">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1024</width>
          <height>768</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.25</near>
          <far>1000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>cam_left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>cam_left</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="cam_right">
    <sensor name="cam_right_camera" type="camera">
      <pose>0 0 0 3.141592654 0 0 </pose>
      <update_rate>30.0</update_rate>
      <camera name="cam_right_cam">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1024</width>
          <height>768</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.25</near>
          <far>1000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>cam_right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>cam_right</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="donkey_ros_control">
      <controlPeriod>0.001</controlPeriod>
      <robotParam>robot_description</robotParam>
      <!--
            <robotNamespace>$(arg prefix)</robotNamespace>
            <robotSimType>sherpa_donkey_control/SherpaDonkeyHWSim</robotSimType>
	    
	    -->
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="object_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>world</odometryTopic>
      <odometryFrame>world</odometryFrame>
      <odometryRate>10.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
</robot>
